/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/no-unused-vars-experimental */
import { BaseAPI } from './base';
import { RedundancyPendingItem } from '@cyberalien/redundancy';
import request, { Response } from 'request';

export class API extends BaseAPI {
	/**
	 * Send query, callback from Redundancy
	 *
	 * @param provider Provider
	 * @param host Host string
	 * @param params End point and parameters as string
	 * @param status Query status
	 */
	_query(
		provider: string,
		host: string,
		params: string,
		status: RedundancyPendingItem
	): void {
		const uri = host + params;

		request(
			{
				uri: uri,
				headers: {
					'User-Agent':
						'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15',
				},
			},
			(error: unknown, res: Response, data: unknown): void => {
				if (error !== null) {
					console.error(error);
					return;
				}

				// Decode JSON data
				try {
					data = JSON.parse(data as string);
				} catch (err) {
					console.error('Error parsing API response');
					return;
				}

				// Store cache and complete
				this._storeCache(provider, params, data);
				status.done(data);
			}
		);
	}
}
